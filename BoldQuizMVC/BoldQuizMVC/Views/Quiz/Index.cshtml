@model BoldQuizMVC.Models.QuizViewModel
@{
    
    Layout = null;
}

@Scripts.Render("~/bundles/jquery")




@* For every question, it will show up the main question and then the and responsible answers as well. NameFor is the location of the object in the array - the range is 0-9. 
 Hidden is used to hide to the end user and to post to the server.Html.NameFor returns a string. *@

<form method="post" action="/Quiz/submitQuiz"> 

    <input type="hidden" name="@Html.NameFor(x=> Model.LevelID)" value=" @Model.LevelID" />

    <input type="hidden" name="@Html.NameFor(x=> Model.RoomID)" value=" @Model.RoomID" />

   @* Quizviewmodel.quetions counting the questions and we are looping because of the sake of server-side for validating. *@

   @for (int i = 0; i < Model.questions.Count; i++)

   {
   
 var item = Model.questions[i];
        <input type="hidden" name="@Html.NameFor(x=> Model.questions[i].QuestionID)" value=" @item.QuestionID" />
        <div>
            <strong>@item.QuestionTitle</strong>
    <ul style="list-style: none;">
        @for(int index =0; index < item.Answers.Count; index++)
        {
            <li><input onclick="handleSeleteced()" id="@("Answer-" + Model.questions[i].Answers[index].ID)" class="button-answer" type="radio" required  name="@Html.NameFor(x=> Model.questions[i].SelectedAnswerID)" value=" @Model.questions[i].Answers[index].ID" />@Model.questions[i].Answers[index].AnswerText </li>

        }
    </ul>


</div>

    }
    <button> Godkend </button>
</form>
<script src="~/Scripts/Cookies.js"></script>
